services:
  db:
    image: pgvector/pgvector:pg17-trixie
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatbot_net

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # Added vectorizer URL so your backend can find it
      - VECTORIZER_URL=http://vectorizer:7860/vectors
    depends_on:
      - ollama
      - db
      # Make sure backend waits for the vectorizer to start
      - vectorizer
    networks:
      - chatbot_net

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - chatbot_net

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - chatbot_net
  
  # New vectorizer service
  vectorizer:
    image: timescale/pgai-vectorizer-worker:latest
    ports:
      - "7860:7860"
    networks:
      - chatbot_net

volumes:
  postgres_data:
  ollama_data:

networks:
  chatbot_net:
    driver: bridge